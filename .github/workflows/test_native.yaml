name: Test
on:
  push:
    branches:
      - main
jobs:
  package:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        torch-version: ["2.0.0", "2.1.0", "2.2.0", "2.3.0"]
        exclude:
          - os: macos-13
            torch-version: "2.3.0"
          - os: macos-latest
            torch-version: "2.3.0"
          - python-version: "3.12"
            torch-version: "2.0.0"
          - python-version: "3.12"
            torch-version: "2.1.0"
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install FFmpeg (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install ffmpeg
      - name: Install FFmpeg (MacOS)
        if: matrix.os == 'macos-13' || matrix.os == 'macos-latest'
        run: |
          brew install ffmpeg@6
          homebrew_prefix="$(brew --prefix)"
          echo "export HOMEBREW_PREFIX=${homebrew_prefix}" >> "${GITHUB_ENV}"
          echo "${homebrew_prefix}/opt/ffmpeg@6/bin" >> "${GITHUB_PATH}"
      - name: Install FFmpeg (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install ffmpeg --version=6.1.0
      - name: Show version of FFmpeg
        run: |
          ffmpeg -version
      - name: Overwrite torch version in requirements.txt (Windows)
        id: windows_torch_installation
        if: matrix.os == 'windows-latest'
        env:
          TORCH_VERSION: ${{ matrix.torch-version }}
        run: |
          python overwrite_requirements.py --path requirements.txt --torch-version ${env:TORCH_VERSION}
      - name: Overwrite torch version in requirements.txt (Ubuntu & MacOS)
        if: steps.windows_torch_installation.conclusion == 'skipped'
        env:
          TORCH_VERSION: ${{ matrix.torch-version }}
        run: |
          python overwrite_requirements.py --path requirements.txt --torch-version ${TORCH_VERSION}
      - name: Install dependencies
        run: |
          pip install pip
          pip install -r requirements.txt
      - name: Show dependencies
        run: |
          pip list
      - name: Verify version of torch (Windows)
        id: windows_torch_verification
        if: matrix.os == 'windows-latest'
        env:
          TORCH_VERSION: ${{ matrix.torch-version }}
        run: |
          python verify_torch_version.py --torch-version ${env:TORCH_VERSION}
      - name: Verify version of torch (Ubuntu & MacOS)
        if: steps.windows_torch_verification.conclusion == 'skipped'
        env:
          TORCH_VERSION: ${{ matrix.torch-version }}
        run: |
          python verify_torch_version.py --torch-version ${TORCH_VERSION}
      - name: Show backend of torchaudio
        run: |
          python -c "import torchaudio; print(torchaudio.list_audio_backends())"
          python -c "import torchaudio; assert len(torchaudio.list_audio_backends()) > 0"
